---
- name     : Set variable mpi_path
  set_fact : mpi_path={{default_mpi_path}}
  when     : mpi_path is not defined

- name     : Set variable mpi_runner
  set_fact : mpi_runner={{default_mpi_runner}}
  when     : mpi_runner is not defined

- name     : Set variable env_path
  set_fact : 
    env_path: "{{GenomicsDB_bin_dir}}:{{mpi_path}}/bin:{{gcc_prefix}}/bin:$PATH"
  when     : env_path is not defined

- name     : Set variable env_ld_library_path
  set_fact : 
    env_ld_library_path: "{{mpi_path}}/lib:{{gcc_prefix}}/lib:{{gcc_prefix}}/lib64:{{htslib_dir}}:$LD_LIBRARY_PATH"
  when     : env_ld_library_path is not defined and libcsv_path is not defined

- name     : Set variable env_ld_library_path
  set_fact : 
    env_ld_library_path: "{{mpi_path}}/lib:{{gcc_prefix}}/lib:{{gcc_prefix}}/lib64:{{htslib_dir}}:{{libcsv_path}}/.libs:$LD_LIBRARY_PATH"
  when     : env_ld_library_path is not defined and libcsv_path is defined

- name     : Set variable env_pythonpath
  set_fact : 
    env_pythonpath: "{{store_dir}}:$PYTHONPATH"
  when     : env_pythonpath is not defined

- name       : Setup environment variable PATH for users
  lineinfile :
    dest: "/home/{{item}}/.bashrc"
    line: "export PATH={{env_path}}"
  with_items: "{{users_list}}"

- name       : Setup environment variable LD_LIBRARY_PATH for users
  lineinfile :
    dest: "/home/{{item}}/.bashrc"
    line: "export LD_LIBRARY_PATH={{env_ld_library_path}}"
  with_items: "{{users_list}}"

- name       : Setup environment variable PYTHONPATH for users
  lineinfile :
    dest: "/home/{{item}}/.bashrc"
    line: "export PYTHONPATH={{env_pythonpath}}"
  with_items: "{{users_list}}"

- name     : Set variable ga4gh_virtualenv 
  set_fact : ga4gh_virtualenv={{variantdb_dir}}/venv
  when     : ga4gh_virtualenv is not defined

- name : Create and install virtualenv for GA4GH webserver
  pip  : 
    requirements             : "{{store_dir}}/requirements.txt"
    virtualenv               : "{{ga4gh_virtualenv}}"
    virtualenv_site_packages : yes
  become      : yes
  become_user : "{{owner_user_name}}"

- name        : Force install psycopg2 package in virtualenv
  shell       : ". {{ga4gh_virtualenv}}/bin/activate && pip install -U --force psycopg2"
  become      : yes
  become_user : "{{owner_user_name}}"

- name: Run python setup.py to install the modules into the virtualenv
  shell: ". {{ga4gh_virtualenv}}/bin/activate && python setup.py develop"
  args  : 
    chdir : "{{store_dir}}"
  become      : yes
  become_user : "{{owner_user_name}}"

- name     : Set variable metadb_adapter
  set_fact : metadb_adapter="{{default_metadb_adapter}}"
  when     : metadb_adapter is not defined

- name     : Set variable metadb_uri
  set_fact : metadb_uri="{{metadb_adapter}}://@:5432/{{meta_db_name}}"
  when     : metadb_uri is not defined

- name     : Update alembic.ini
  template : 
    src   : alembic.ini.j2 
    dest  : "{{store_dir}}/metadb/alembic.ini"
    group : "{{group_name}}"
    owner : "{{owner_user_name}}"
    mode  : "{{permissions}}"

- name  : Run alembic upgrade to head
  shell : ". {{ga4gh_virtualenv}}/bin/activate && alembic upgrade head"
  args  : 
    chdir : "{{store_dir}}/metadb"
  become      : yes
  become_user : "{{owner_user_name}}"

# Priviledges have to be granted on the tables after it is created by alembic.
- name : Grant SELECT-only priviledges to the client on the DB
  postgresql_privs :
    db           : "{{meta_db_name}}"
    role         : "{{client_user_name}}"
    state        : present
    privs        : SELECT
    objs         : ALL_IN_SCHEMA
  become      : yes
  become_user : postgres
  when        : client_user_name != owner_user_name
